/api/rest/doerService

//----- Read -----
/doer/read/id/{id}, Method.POST,  produces JSON of Doer - читает одного исполнителя с указаным id
/doer/read/all/, Method.POST, consumes = JSON of DoerFilterOptions, produces = JSON EntityPage<Doer> -
возвращает массив исполнителей, отфильтрованых по критериям указанным в DoerFilterOptions

//------ Create -----
/doer/create/, Method.POST, consumes = JSON of Doer - в хедере возвращает ссылку /doer/read/id/{id} с id
новогосозданного исполнителя
/doer/id/{id}/recall/create/, Method.POST, consumes = JSON of Recall - добавляет исполнителю с {id} отзыв
/doer/id/{id}/client/create/, Method.POST, consumes = JSON of Doer, RequestParam clientId - добавляет исполнителю с {id}
клиента, отправляет запрос на подтверждение. Опредиляет кто добавил нового клиента сравнивая id залогиненого юзера с id
автора "исполнителя" и параметром clientId. В зависимости от этого решает кому послать запрос на подтверждение.

//------- Update ------
/doer/id/{id}/clientConfirm/{clientId}/, Method.POST, consumes = JSON of Doer, produces = JSON of Doer -
подтверждение о сотрудничестве от клиента. Апдейтит исполнителя.
/doer/id/{id}/doerConfirm/{clientId}/, Method.POST, consumes = JSON of Doer, produces = JSON of Doer -
подтверждение о сотрудничестве от исполнителя. Апдейтит исполнителя.
/doer/id/{id}/update/, Method.POST, consumes = JSON of Doer, produces = JSON of Doer - апдейтит только те поля которые
пришли. Если какие-то поля не пришли - ничего с ними не делает

//------- Delete -------
/doer/delete/{id}, Method.POST

//-------- Other --------
/doer/id/{id}/recall/count/, Method.POST,
